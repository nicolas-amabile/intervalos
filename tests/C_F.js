const { NOTES, SHIFTS, INTERVALS, FULL_INTERVAL_QUALITY, DIRECTION } = require('../src/constants')

const { ASC, DSC } = DIRECTION
const { FLAT, NATURAL, SHARP } = SHIFTS
const { m, M, DISMINUIDA, JUSTA, AUMENTADA } = FULL_INTERVAL_QUALITY
const { II, III, IV, V, VI, VII } = INTERVALS

const C_F_TEST_CASES = [
  ['C', FLAT, II, m, ASC, 'Dbb'],
  ['C', FLAT, II, M, ASC, 'Db'],
  ['C', FLAT, III, m, ASC, 'Ebb'],
  ['C', FLAT, III, M, ASC, 'Eb'],
  ['C', FLAT, IV, DISMINUIDA, ASC, 'Fbb'],
  ['C', FLAT, IV, JUSTA, ASC, 'Fb'],
  ['C', FLAT, IV, AUMENTADA, ASC, 'F'],
  ['C', FLAT, V, DISMINUIDA, ASC, 'Gbb'],
  ['C', FLAT, V, JUSTA, ASC, 'Gb'],
  ['C', FLAT, V, AUMENTADA, ASC, 'G'],
  ['C', FLAT, VI, m, ASC, 'Abb'],
  ['C', FLAT, VI, M, ASC, 'Ab'],
  ['C', FLAT, VII, m, ASC, 'Bbb'],
  ['C', FLAT, VII, M, ASC, 'Bb'],
  ['C', NATURAL, II, m, ASC, 'Db'],
  ['C', NATURAL, II, M, ASC, 'D'],
  ['C', NATURAL, III, m, ASC, 'Eb'],
  ['C', NATURAL, III, M, ASC, 'E'],
  ['C', NATURAL, IV, DISMINUIDA, ASC, 'Fb'],
  ['C', NATURAL, IV, JUSTA, ASC, 'F'],
  ['C', NATURAL, IV, AUMENTADA, ASC, 'F#'],
  ['C', NATURAL, V, DISMINUIDA, ASC, 'Gb'],
  ['C', NATURAL, V, JUSTA, ASC, 'G'],
  ['C', NATURAL, V, AUMENTADA, ASC, 'G#'],
  ['C', NATURAL, VI, m, ASC, 'Ab'],
  ['C', NATURAL, VI, M, ASC, 'A'],
  ['C', NATURAL, VII, m, ASC, 'Bb'],
  ['C', NATURAL, VII, M, ASC, 'B'],
  ['C', SHARP, II, m, ASC, 'D'],
  ['C', SHARP, II, M, ASC, 'D#'],
  ['C', SHARP, III, m, ASC, 'E'],
  ['C', SHARP, III, M, ASC, 'E#'],
  ['C', SHARP, IV, DISMINUIDA, ASC, 'F'],
  ['C', SHARP, IV, JUSTA, ASC, 'F#'],
  ['C', SHARP, IV, AUMENTADA, ASC, 'F##'],
  ['C', SHARP, V, DISMINUIDA, ASC, 'G'],
  ['C', SHARP, V, JUSTA, ASC, 'G#'],
  ['C', SHARP, V, AUMENTADA, ASC, 'G##'],
  ['C', SHARP, VI, m, ASC, 'A'],
  ['C', SHARP, VI, M, ASC, 'A#'],
  ['C', SHARP, VII, m, ASC, 'B'],
  ['C', SHARP, VII, M, ASC, 'B#'],
  ['C', FLAT, II, m, DSC, 'Bb'],
  ['C', FLAT, II, M, DSC, 'Bbb'],
  ['C', FLAT, III, m, DSC, 'Ab'],
  ['C', FLAT, III, M, DSC, 'Abb'],
  ['C', FLAT, IV, DISMINUIDA, DSC, 'G'],
  ['C', FLAT, IV, JUSTA, DSC, 'Gb'],
  ['C', FLAT, IV, AUMENTADA, DSC, 'Gbb'],
  ['C', FLAT, V, DISMINUIDA, DSC, 'F'],
  ['C', FLAT, V, JUSTA, DSC, 'Fb'],
  ['C', FLAT, V, AUMENTADA, DSC, 'Fbb'],
  ['C', FLAT, VI, m, DSC, 'Eb'],
  ['C', FLAT, VI, M, DSC, 'Ebb'],
  ['C', FLAT, VII, m, DSC, 'Db'],
  ['C', FLAT, VII, M, DSC, 'Dbb'],
  ['C', NATURAL, II, m, DSC, 'B'],
  ['C', NATURAL, II, M, DSC, 'Bb'],
  ['C', NATURAL, III, m, DSC, 'A'],
  ['C', NATURAL, III, M, DSC, 'Ab'],
  ['C', NATURAL, IV, DISMINUIDA, DSC, 'G#'],
  ['C', NATURAL, IV, JUSTA, DSC, 'G'],
  ['C', NATURAL, IV, AUMENTADA, DSC, 'Gb'],
  ['C', NATURAL, V, DISMINUIDA, DSC, 'F#'],
  ['C', NATURAL, V, JUSTA, DSC, 'F'],
  ['C', NATURAL, V, AUMENTADA, DSC, 'Fb'],
  ['C', NATURAL, VI, m, DSC, 'E'],
  ['C', NATURAL, VI, M, DSC, 'Eb'],
  ['C', NATURAL, VII, m, DSC, 'D'],
  ['C', NATURAL, VII, M, DSC, 'Db'],
  ['C', SHARP, II, m, DSC, 'B#'],
  ['C', SHARP, II, M, DSC, 'B'],
  ['C', SHARP, III, m, DSC, 'A#'],
  ['C', SHARP, III, M, DSC, 'A'],
  ['C', SHARP, IV, DISMINUIDA, DSC, 'G##'],
  ['C', SHARP, IV, JUSTA, DSC, 'G#'],
  ['C', SHARP, IV, AUMENTADA, DSC, 'G'],
  ['C', SHARP, V, DISMINUIDA, DSC, 'F##'],
  ['C', SHARP, V, JUSTA, DSC, 'F#'],
  ['C', SHARP, V, AUMENTADA, DSC, 'F'],
  ['C', SHARP, VI, m, DSC, 'E#'],
  ['C', SHARP, VI, M, DSC, 'E'],
  ['C', SHARP, VII, m, DSC, 'D#'],
  ['C', SHARP, VII, M, DSC, 'D'],
  ['F', FLAT, II, m, ASC, 'Gbb'],
  ['F', FLAT, II, M, ASC, 'Gb'],
  ['F', FLAT, III, m, ASC, 'Abb'],
  ['F', FLAT, III, M, ASC, 'Ab'],
  ['F', FLAT, IV, DISMINUIDA, ASC, 'Bbbb'],
  ['F', FLAT, IV, JUSTA, ASC, 'Bbb'],
  ['F', FLAT, IV, AUMENTADA, ASC, 'Bb'],
  ['F', FLAT, V, DISMINUIDA, ASC, 'Cbb'],
  ['F', FLAT, V, JUSTA, ASC, 'Cb'],
  ['F', FLAT, V, AUMENTADA, ASC, 'C'],
  ['F', FLAT, VI, m, ASC, 'Dbb'],
  ['F', FLAT, VI, M, ASC, 'Db'],
  ['F', FLAT, VII, m, ASC, 'Ebb'],
  ['F', FLAT, VII, M, ASC, 'Eb'],
  ['F', NATURAL, II, m, ASC, 'Gb'],
  ['F', NATURAL, II, M, ASC, 'G'],
  ['F', NATURAL, III, m, ASC, 'Ab'],
  ['F', NATURAL, III, M, ASC, 'A'],
  ['F', NATURAL, IV, DISMINUIDA, ASC, 'Bbb'],
  ['F', NATURAL, IV, JUSTA, ASC, 'Bb'],
  ['F', NATURAL, IV, AUMENTADA, ASC, 'B'],
  ['F', NATURAL, V, DISMINUIDA, ASC, 'Cb'],
  ['F', NATURAL, V, JUSTA, ASC, 'C'],
  ['F', NATURAL, V, AUMENTADA, ASC, 'C#'],
  ['F', NATURAL, VI, m, ASC, 'Db'],
  ['F', NATURAL, VI, M, ASC, 'D'],
  ['F', NATURAL, VII, m, ASC, 'Eb'],
  ['F', NATURAL, VII, M, ASC, 'E'],
  ['F', SHARP, II, m, ASC, 'G'],
  ['F', SHARP, II, M, ASC, 'G#'],
  ['F', SHARP, III, m, ASC, 'A'],
  ['F', SHARP, III, M, ASC, 'A#'],
  ['F', SHARP, IV, DISMINUIDA, ASC, 'Bb'],
  ['F', SHARP, IV, JUSTA, ASC, 'B'],
  ['F', SHARP, IV, AUMENTADA, ASC, 'B#'],
  ['F', SHARP, V, DISMINUIDA, ASC, 'C'],
  ['F', SHARP, V, JUSTA, ASC, 'C#'],
  ['F', SHARP, V, AUMENTADA, ASC, 'C##'],
  ['F', SHARP, VI, m, ASC, 'D'],
  ['F', SHARP, VI, M, ASC, 'D#'],
  ['F', SHARP, VII, m, ASC, 'E'],
  ['F', SHARP, VII, M, ASC, 'E#'],
  ['F', FLAT, II, m, DSC, 'Eb'],
  ['F', FLAT, II, M, DSC, 'Ebb'],
  ['F', FLAT, III, m, DSC, 'Db'],
  ['F', FLAT, III, M, DSC, 'Dbb'],
  ['F', FLAT, IV, DISMINUIDA, DSC, 'C'],
  ['F', FLAT, IV, JUSTA, DSC, 'Cb'],
  ['F', FLAT, IV, AUMENTADA, DSC, 'Cbb'],
  ['F', FLAT, V, DISMINUIDA, DSC, 'Bb'],
  ['F', FLAT, V, JUSTA, DSC, 'Bbb'],
  ['F', FLAT, V, AUMENTADA, DSC, 'Bbbb'],
  ['F', FLAT, VI, m, DSC, 'Ab'],
  ['F', FLAT, VI, M, DSC, 'Abb'],
  ['F', FLAT, VII, m, DSC, 'Gb'],
  ['F', FLAT, VII, M, DSC, 'Gbb'],
  ['F', NATURAL, II, m, DSC, 'E'],
  ['F', NATURAL, II, M, DSC, 'Eb'],
  ['F', NATURAL, III, m, DSC, 'D'],
  ['F', NATURAL, III, M, DSC, 'Db'],
  ['F', NATURAL, IV, DISMINUIDA, DSC, 'C#'],
  ['F', NATURAL, IV, JUSTA, DSC, 'C'],
  ['F', NATURAL, IV, AUMENTADA, DSC, 'Cb'],
  ['F', NATURAL, V, DISMINUIDA, DSC, 'B'],
  ['F', NATURAL, V, JUSTA, DSC, 'Bb'],
  ['F', NATURAL, V, AUMENTADA, DSC, 'Bbb'],
  ['F', NATURAL, VI, m, DSC, 'A'],
  ['F', NATURAL, VI, M, DSC, 'Ab'],
  ['F', NATURAL, VII, m, DSC, 'G'],
  ['F', NATURAL, VII, M, DSC, 'Gb'],
  ['F', SHARP, II, m, DSC, 'E#'],
  ['F', SHARP, II, M, DSC, 'E'],
  ['F', SHARP, III, m, DSC, 'D#'],
  ['F', SHARP, III, M, DSC, 'D'],
  ['F', SHARP, IV, DISMINUIDA, DSC, 'C##'],
  ['F', SHARP, IV, JUSTA, DSC, 'C#'],
  ['F', SHARP, IV, AUMENTADA, DSC, 'C'],
  ['F', SHARP, V, DISMINUIDA, DSC, 'B#'],
  ['F', SHARP, V, JUSTA, DSC, 'B'],
  ['F', SHARP, V, AUMENTADA, DSC, 'Bb'],
  ['F', SHARP, VI, m, DSC, 'A#'],
  ['F', SHARP, VI, M, DSC, 'A'],
  ['F', SHARP, VII, m, DSC, 'G#'],
  ['F', SHARP, VII, M, DSC, 'G'],
]

module.exports = {
  C_F_TEST_CASES,
}
